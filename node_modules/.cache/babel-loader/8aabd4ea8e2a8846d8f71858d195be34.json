{"ast":null,"code":"import { GET_CURRENCY, GET_CURRENCY_SUCCESS, GET_EXPENSES_SUCCESS, DELETE_EXPENSE, GET_EDIT_EXPENSE, SET_EDIT_EXPENSE } from '../actions/walletAction';\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n  editor: false,\n  idToEdit: 0\n};\n\nfunction walletReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  let newExpanses = [];\n\n  switch (action.type) {\n    case GET_CURRENCY_SUCCESS:\n      return { ...state,\n        currencies: action.currencies\n      };\n\n    case GET_CURRENCY:\n      return { ...state\n      };\n\n    case GET_EXPENSES_SUCCESS:\n      return { ...state,\n        expenses: [...state.expenses, {\n          id: state.expenses.length,\n          ...action.expenses\n        }]\n      };\n\n    case DELETE_EXPENSE:\n      return { ...state,\n        expenses: state.expenses.filter(_ref => {\n          let {\n            id\n          } = _ref;\n          return id !== action.expenseId;\n        })\n      };\n\n    case GET_EDIT_EXPENSE:\n      return { ...state,\n        idToEdit: action.expenseId,\n        editor: true\n      };\n\n    case SET_EDIT_EXPENSE:\n      newExpanses = state.expenses.reduce((acc, current) => {\n        if (current.id === state.idToEdit) {\n          current.value = action.expense.value;\n          current.tag = action.expense.tag;\n          current.description = action.expense.description;\n          current.currency = action.expense.currency;\n          current.method = action.expense.method;\n        }\n\n        acc.push(current);\n        return acc;\n      }, []);\n      return { ...state,\n        expenses: [...newExpanses],\n        idToEdit: 0,\n        editor: false\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default walletReducer;","map":{"version":3,"names":["GET_CURRENCY","GET_CURRENCY_SUCCESS","GET_EXPENSES_SUCCESS","DELETE_EXPENSE","GET_EDIT_EXPENSE","SET_EDIT_EXPENSE","INITIAL_STATE","currencies","expenses","editor","idToEdit","walletReducer","state","action","newExpanses","type","id","length","filter","expenseId","reduce","acc","current","value","expense","tag","description","currency","method","push"],"sources":["/home/killua/Documents/my-projects/trybe-wallet/src/redux/reducers/wallet.js"],"sourcesContent":["import {\n  GET_CURRENCY,\n  GET_CURRENCY_SUCCESS,\n  GET_EXPENSES_SUCCESS,\n  DELETE_EXPENSE,\n  GET_EDIT_EXPENSE,\n  SET_EDIT_EXPENSE,\n} from '../actions/walletAction';\n\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n  editor: false,\n  idToEdit: 0,\n};\n\nfunction walletReducer(state = INITIAL_STATE, action) {\n  let newExpanses = [];\n  switch (action.type) {\n  case GET_CURRENCY_SUCCESS:\n    return {\n      ...state,\n      currencies: action.currencies,\n    };\n  case GET_CURRENCY:\n    return {\n      ...state,\n    };\n  case GET_EXPENSES_SUCCESS:\n    return {\n      ...state,\n      expenses: [...state.expenses, { id: state.expenses.length, ...action.expenses }],\n    };\n  case DELETE_EXPENSE:\n    return {\n      ...state,\n      expenses: state.expenses.filter(({ id }) => id !== action.expenseId),\n    };\n  case GET_EDIT_EXPENSE:\n    return {\n      ...state,\n      idToEdit: action.expenseId,\n      editor: true,\n    };\n  case SET_EDIT_EXPENSE:\n    newExpanses = state.expenses.reduce((acc, current) => {\n      if (current.id === state.idToEdit) {\n        current.value = action.expense.value;\n        current.tag = action.expense.tag;\n        current.description = action.expense.description;\n        current.currency = action.expense.currency;\n        current.method = action.expense.method;\n      }\n      acc.push(current);\n      return acc;\n    }, []);\n    return {\n      ...state,\n      expenses: [...newExpanses],\n      idToEdit: 0,\n      editor: false,\n    };\n  default:\n    return state;\n  }\n}\n\nexport default walletReducer;\n"],"mappings":"AAAA,SACEA,YADF,EAEEC,oBAFF,EAGEC,oBAHF,EAIEC,cAJF,EAKEC,gBALF,EAMEC,gBANF,QAOO,yBAPP;AASA,MAAMC,aAAa,GAAG;EACpBC,UAAU,EAAE,EADQ;EAEpBC,QAAQ,EAAE,EAFU;EAGpBC,MAAM,EAAE,KAHY;EAIpBC,QAAQ,EAAE;AAJU,CAAtB;;AAOA,SAASC,aAAT,GAAsD;EAAA,IAA/BC,KAA+B,uEAAvBN,aAAuB;EAAA,IAARO,MAAQ;EACpD,IAAIC,WAAW,GAAG,EAAlB;;EACA,QAAQD,MAAM,CAACE,IAAf;IACA,KAAKd,oBAAL;MACE,OAAO,EACL,GAAGW,KADE;QAELL,UAAU,EAAEM,MAAM,CAACN;MAFd,CAAP;;IAIF,KAAKP,YAAL;MACE,OAAO,EACL,GAAGY;MADE,CAAP;;IAGF,KAAKV,oBAAL;MACE,OAAO,EACL,GAAGU,KADE;QAELJ,QAAQ,EAAE,CAAC,GAAGI,KAAK,CAACJ,QAAV,EAAoB;UAAEQ,EAAE,EAAEJ,KAAK,CAACJ,QAAN,CAAeS,MAArB;UAA6B,GAAGJ,MAAM,CAACL;QAAvC,CAApB;MAFL,CAAP;;IAIF,KAAKL,cAAL;MACE,OAAO,EACL,GAAGS,KADE;QAELJ,QAAQ,EAAEI,KAAK,CAACJ,QAAN,CAAeU,MAAf,CAAsB;UAAA,IAAC;YAAEF;UAAF,CAAD;UAAA,OAAYA,EAAE,KAAKH,MAAM,CAACM,SAA1B;QAAA,CAAtB;MAFL,CAAP;;IAIF,KAAKf,gBAAL;MACE,OAAO,EACL,GAAGQ,KADE;QAELF,QAAQ,EAAEG,MAAM,CAACM,SAFZ;QAGLV,MAAM,EAAE;MAHH,CAAP;;IAKF,KAAKJ,gBAAL;MACES,WAAW,GAAGF,KAAK,CAACJ,QAAN,CAAeY,MAAf,CAAsB,CAACC,GAAD,EAAMC,OAAN,KAAkB;QACpD,IAAIA,OAAO,CAACN,EAAR,KAAeJ,KAAK,CAACF,QAAzB,EAAmC;UACjCY,OAAO,CAACC,KAAR,GAAgBV,MAAM,CAACW,OAAP,CAAeD,KAA/B;UACAD,OAAO,CAACG,GAAR,GAAcZ,MAAM,CAACW,OAAP,CAAeC,GAA7B;UACAH,OAAO,CAACI,WAAR,GAAsBb,MAAM,CAACW,OAAP,CAAeE,WAArC;UACAJ,OAAO,CAACK,QAAR,GAAmBd,MAAM,CAACW,OAAP,CAAeG,QAAlC;UACAL,OAAO,CAACM,MAAR,GAAiBf,MAAM,CAACW,OAAP,CAAeI,MAAhC;QACD;;QACDP,GAAG,CAACQ,IAAJ,CAASP,OAAT;QACA,OAAOD,GAAP;MACD,CAVa,EAUX,EAVW,CAAd;MAWA,OAAO,EACL,GAAGT,KADE;QAELJ,QAAQ,EAAE,CAAC,GAAGM,WAAJ,CAFL;QAGLJ,QAAQ,EAAE,CAHL;QAILD,MAAM,EAAE;MAJH,CAAP;;IAMF;MACE,OAAOG,KAAP;EA7CF;AA+CD;;AAED,eAAeD,aAAf"},"metadata":{},"sourceType":"module"}